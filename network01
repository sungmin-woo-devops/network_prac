컴퓨터 네트워크란?
컴퓨터 or 통신장비들끼리 자원을 공유할 수 있도록 하는 디지털 전기통신망의 하나

네트워크 구조 3가지
1. Edge
- 랩탑, 데스크탑, 서버 등이 위치
- 웹 브라우저, 어플리케이션 등이 동작

2. Core
- 라우터들이 위치
- 통신을 전달해주는 통신 매개체(ex. 라우터)

3. Link
- 네트워크를 연결해주는 역할
- 라우터와 라우터끼리 큰 케이블 사용
- 라우터와 단말장치 연결 시 LAN, WIFI 등 사용

---

네트워크 통신 모델(대표적인 2가지)
1. Client/Server 모델
- 요청하는 Client, 응답을 하는 Server로 구성
- ex) 브라우저에서 www.naver.com을 입력하는 순간
      클라이언트는 서버에 HTTP(S) 요청을 GET|POST|...방식으로 하게 됨
      서버는 해당 요청에 대한 응답을 클라이언트에 반환
2. Peer to Peer 모델
- 클라이언트끼리 통신하는데 서버의 자원을 사용(정리 필요)
- ex) BitTorrent, Skype

---

프로토콜?
- 통신 규약
  - 인사 -> 본론 과 유사
  - 바로 본론을 얘기하는 것이 아닌 간단한 인사 후 이야기를 꺼내는 방식
- 실제 메시지를 주고 받기 위한 준비 동작
- 같은 프로토콜이어야 통신 가능

패킷?
- 비트들의 집합

TCP/UDP
TCP
- 사용자에게 신뢰성 있는 통신 제공
  (신뢰성이 있다 = 받는 사람이 보낸 걸 다 받아야 함)
  - 메시지가 유실되지 않고 원본 데이터 그대로 통신
    (이것을 어떻게 막아주는가? 뒤에서 다룸)
  - 데이터의 순서가 있음(순서를 지키며 목적지까지 도달?)
- 흐름 제어(Flow Control) 
  - 받는 사람의 입장을 고려하여 속도를 조절하여 송신
  - WEB, FTP 등에서 사용
- 우편 시스템에서 등기와 비슷

UDP
- 사용자에게 비신뢰성 통신 제공
- 비연결 지향
- 받는 입장을 고려하지 않고 송신
- 속도가 빠름 - 신뢰성이 보장되지 않는다면 속도가 의미가 없음
- 전화 음성 패킷에서 주로 사용
- 우편 시스템에서 편지와 비슷(잃어버릴 수도 있음. 대신 빠름)

---

통신 계층 모델
OSI 7 계층
TCP 4 계층
- 계층을 나눈 이유? 프로토콜 계층별로 나누기 위해서

소켓?
클라이언트 - 서버 모델
- 서버는 웹 서버
- 클라이언트 웹 브라우저
  서버와 클라이언트는 각각 IP 주소를 가지고 있어야 함
  - 서버는 고정된 IP 주소를 가지고 있어야 함 - 유동성이 적어야 함(움직이는 성)
클라이언트와 서버가 통신을 하기 위해서는 소켓 주소를 알아야 함
- IP 주소 : 인터넷 상에 존재하는 컴퓨터의 주소
- 포트 번호 : 각 컴퓨터에서 특정 프로세스를 지칭할 대 필요한 것이 포트 번호



















